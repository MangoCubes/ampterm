use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
pub struct Media {
    pub id: String,
    pub parent: Option<String>,
    pub is_dir: bool,
    pub title: String,
    pub album: Option<String>,
    pub artist: Option<String>,
    pub track: Option<i32>,
    pub year: Option<i32>,
    pub genre: Option<String>,
    pub cover_art: Option<String>,
    pub size: Option<u64>,
    pub content_type: Option<String>,
    pub suffix: Option<String>,
    pub transcoded_content_type: Option<String>,
    pub transcoded_suffix: Option<String>,
    pub duration: Option<i32>,
    pub bit_rate: Option<i32>,
    pub bit_depth: Option<i32>,
    pub sampling_rate: Option<i32>,
    pub channel_count: Option<i32>,
    pub path: Option<String>,
    pub is_video: Option<bool>,
    pub user_rating: Option<i32>,
    pub average_rating: Option<f32>,
    pub play_count: Option<u64>,
    pub disc_number: Option<i32>,
    pub created: Option<String>,
    pub starred: Option<String>,
    pub album_id: Option<String>,
    pub artist_id: Option<String>,
    pub media_type: Option<String>,
    pub bookmark_position: Option<u64>,
    pub original_width: Option<i32>,
    pub original_height: Option<i32>,
    pub played: Option<String>,
    pub bpm: Option<i32>,
    pub comment: Option<String>,
    pub sort_name: Option<String>,
    pub music_brainz_id: Option<String>,
    // pub genres: Option<Vec<ItemGenre>>,
    // pub artists: Option<Vec<ArtistID3>>,
    pub display_artist: Option<String>,
    // pub album_artists: Option<Vec<ArtistID3>>,
    pub display_album_artist: Option<String>,
    // pub contributors: Option<Vec<Contributor>>,
    pub display_composer: Option<String>,
    pub moods: Option<Vec<String>>,
    // pub replay_gain: Option<ReplayGain>,
    pub explicit_status: Option<String>,
}
#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
pub struct FullPlaylist {
    pub id: String,
    pub name: String,
    pub comment: Option<String>,
    pub owner: Option<String>,
    pub public: Option<bool>,
    pub song_count: u32,
    pub duration: u32,
    pub created: String,
    pub changed: String,
    pub cover_art: Option<String>,
    pub allowed_users: Option<Vec<String>>,
    pub entry: Vec<Media>,
}
#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
pub enum GetPlaylistResponse {
    Success(FullPlaylist),
    Failure(String),
}
